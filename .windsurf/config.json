{
  "project": {
    "name": "Exchange Rate Bot",
    "type": "python",
    "version": "1.0.0"
  },
  "ai_preferences": {
    "language": "english",
    "code_style": "ruff",
    "type_checker": "pyright",
    "package_manager": "uv",
    "documentation_style": "google",
    "prefer_async": true,
    "include_type_hints": true,
    "error_handling": "comprehensive"
  },
  "development_rules": [
    "Always use type hints",
    "Document in English",
    "Implement appropriate logging",
    "Use async/await for I/O",
    "Handle errors robustly",
    "Use uv run for all command execution",
    "Run ruff for code formatting and linting",
    "Use pyright for type checking",
    "Apply SOLID principles in class design",
    "Suggest design patterns when beneficial",
    "Prefer composition over inheritance",
    "Use Protocol classes for interfaces"
  ],
  "dependencies": {
    "python_version": ">=3.13",
    "package_manager": "uv",
    "preferred_packages": {
      "http_client": "httpx",
      "testing": "pytest",
      "env_management": "python-dotenv"
    },
    "development_tools": {
      "linter": "ruff",
      "type_checker": "pyright",
      "formatter": "ruff"
    },
    "commands": {
      "run_tests": "uv run pytest",
      "lint": "uv run ruff check",
      "format": "uv run ruff format",
      "type_check": "uv run pyright"
    },
    "architecture_principles": {
      "solid": {
        "single_responsibility": "Each class should have only one reason to change",
        "open_closed": "Open for extension, closed for modification",
        "liskov_substitution": "Derived classes must be substitutable for base classes",
        "interface_segregation": "Clients should not depend on unused interfaces",
        "dependency_inversion": "Depend on abstractions, not concretions"
      },
      "preferred_patterns": [
        "Strategy Pattern for exchange rate providers",
        "Factory Pattern for API clients",
        "Repository Pattern for data access",
        "Dependency Injection for loose coupling",
        "Command Pattern for bot commands"
      ]
    }
  }
}
